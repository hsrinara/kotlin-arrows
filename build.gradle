buildscript {
  ext.kotlin_version = '1.1.4-3'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'kotlin-kapt'
apply plugin: 'application'
//apply from: rootProject.file('gradle/generated-kotlin-sources.gradle') //optional

mainClassName = 'HelloWorldKt'

defaultTasks 'run'

repositories {
  mavenCentral()
}

idea {
    module {
        sourceDirs += files(
            'build/generated/source/kapt/main',
            'build/generated/source/kaptKotlin/main',
            'build/tmp/kapt/main/kotlinGenerated')
        generatedSourceDirs += files(
            'build/generated/source/kapt/main',
            'build/generated/source/kaptKotlin/main',
            'build/tmp/kapt/main/kotlinGenerated')
    }
}


dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21"
  compile "org.jetbrains.kotlin:kotlin-reflect:1.2.50"
  compile 'io.arrow-kt:arrow-core:0.7.2'
  compile 'io.arrow-kt:arrow-syntax:0.7.2'
  compile 'io.arrow-kt:arrow-typeclasses:0.7.2' 
  compile 'io.arrow-kt:arrow-data:0.7.2' 
  compile 'io.arrow-kt:arrow-instances-core:0.7.2'
  compile 'io.arrow-kt:arrow-instances-data:0.7.2'
//  kapt    'io.arrow-kt:arrow-annotations-processor:0.7.2' 
  
//  compile 'io.arrow-kt:arrow-free:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-mtl:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-effects:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-effects-rx2:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-effects-reactor:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-effects-kotlinx-coroutines:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-optics:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-generic:0.7.2' //optional
//  compile 'io.arrow-kt:arrow-recursion:0.7.2' //optional

  testCompile 'junit:junit:4.11'
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

kotlin {
  experimental {
    coroutines 'enable'
  }
}


task wrapper(type: Wrapper) {
  gradleVersion = "3.4.1"
}
